import React, { useState } from 'react';
import { ChevronDown, ChevronUp, AlertTriangle, Info, ExternalLink, Shield } from 'lucide-react';
import { Vulnerability } from '../types/scanner';

interface VulnerabilityCardProps {
  vulnerability: Vulnerability;
}

const VulnerabilityCard: React.FC<VulnerabilityCardProps> = ({ vulnerability }) => {
  const [isExpanded, setIsExpanded] = useState(false);

  const getSeverityStyles = (severity: string) => {
    switch (severity) {
      case 'Critical':
        return 'bg-red-900/30 border-red-500/50 text-red-400';
      case 'High':
        return 'bg-orange-900/30 border-orange-500/50 text-orange-400';
      case 'Medium':
        return 'bg-yellow-900/30 border-yellow-500/50 text-yellow-400';
      case 'Low':
        return 'bg-blue-900/30 border-blue-500/50 text-blue-400';
      default:
        return 'bg-gray-900/30 border-gray-500/50 text-gray-400';
    }
  };

  const getSeverityIcon = (severity: string) => {
    if (severity === 'Critical' || severity === 'High') {
      return <AlertTriangle className="h-5 w-5" />;
    }
    return <Info className="h-5 w-5" />;
  };

  return (
    <div className={`border rounded-lg transition-all ${getSeverityStyles(vulnerability.severity)}`}>
      <div
        className="p-4 cursor-pointer hover:bg-white/5"
        onClick={() => setIsExpanded(!isExpanded)}
      >
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-3">
            {getSeverityIcon(vulnerability.severity)}
            <div>
              <h3 className="font-semibold text-white">{vulnerability.title}</h3>
              <div className="flex items-center space-x-4 mt-1">
                <span className="text-sm opacity-80">Type: {vulnerability.type}</span>
                <span className={`text-xs px-2 py-1 rounded font-semibold ${getSeverityStyles(vulnerability.severity)}`}>
                  {vulnerability.severity}
                </span>
                {vulnerability.owasp && (
                  <span className="text-xs px-2 py-1 rounded bg-purple-900/30 border border-purple-500/50 text-purple-400">
                    OWASP {vulnerability.owasp}
                  </span>
                )}
              </div>
            </div>
          </div>
          {isExpanded ? <ChevronUp className="h-5 w-5" /> : <ChevronDown className="h-5 w-5" />}
        </div>
      </div>

      {isExpanded && (
        <div className="border-t border-white/10 p-4 space-y-6">
          {/* Description */}
          <div>
            <h4 className="font-semibold text-white mb-2">Description</h4>
            <p className="text-gray-300 text-sm leading-relaxed">{vulnerability.description}</p>
          </div>

          {/* Evidence */}
          <div>
            <h4 className="font-semibold text-white mb-2">Evidence</h4>
            <div className="bg-black/30 border border-gray-600 rounded-lg p-3">
              <pre className="text-sm font-mono text-green-300 whitespace-pre-wrap overflow-x-auto">
                {vulnerability.evidence}
              </pre>
            </div>
          </div>

          {/* Recommendation */}
          <div>
            <h4 className="font-semibold text-white mb-2 flex items-center">
              <Shield className="h-4 w-4 mr-1" />
              Remediation
            </h4>
            <p className="text-gray-300 text-sm leading-relaxed">{vulnerability.recommendation}</p>
          </div>

          {/* Additional Info */}
          {(vulnerability.cwe || vulnerability.owasp) && (
            <div>
              <h4 className="font-semibold text-white mb-2">References</h4>
              <div className="flex flex-wrap gap-2">
                {vulnerability.cwe && (
                  <a
                    href={`https://cwe.mitre.org/data/definitions/${vulnerability.cwe.replace('CWE-', '')}.html`}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="inline-flex items-center space-x-1 text-blue-400 hover:text-blue-300 text-sm"
                  >
                    <ExternalLink className="h-4 w-4" />
                    <span>{vulnerability.cwe}</span>
                  </a>
                )}
                {vulnerability.owasp && (
                  <a
                    href="https://owasp.org/www-project-top-ten/"
                    target="_blank"
                    rel="noopener noreferrer"
                    className="inline-flex items-center space-x-1 text-purple-400 hover:text-purple-300 text-sm"
                  >
                    <ExternalLink className="h-4 w-4" />
                    <span>OWASP Top 10 {vulnerability.owasp}</span>
                  </a>
                )}
              </div>
            </div>
          )}
        </div>
      )}
    </div>
  );
};

export default VulnerabilityCard;